// Code generated by goctl. DO NOT EDIT.
// Source: group.proto

package groupservice

import (
	"context"
	"fmt"

	"github.com/zwtesttt/starcloud/rpc/group/pb/starcloud/rpc/group"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserGroupRequest  = group.GetUserGroupRequest
	GetUserGroupResponse = group.GetUserGroupResponse

	GroupService interface {
		GetUserGroup(ctx context.Context, in *GetUserGroupRequest, opts ...grpc.CallOption) (*GetUserGroupResponse, error)
	}

	defaultGroupService struct {
		cli zrpc.Client
	}
)

func NewGroupService(cli zrpc.Client) GroupService {
	fmt.Println("初始化group-rpc客户端", cli)
	return &defaultGroupService{
		cli: cli,
	}
}

func (m *defaultGroupService) GetUserGroup(ctx context.Context, in *GetUserGroupRequest, opts ...grpc.CallOption) (*GetUserGroupResponse, error) {
	client := group.NewGroupServiceClient(m.cli.Conn())
	return client.GetUserGroup(ctx, in, opts...)
}
